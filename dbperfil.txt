-- 1. Criar a tabela users
CREATE TABLE users (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  fullname TEXT NOT NULL,
  email TEXT UNIQUE NOT NULL,
  phone TEXT,
  created_at TIMESTAMPTZ DEFAULT NOW()
);

-- 2. Ativar RLS (Row Level Security)
ALTER TABLE users ENABLE ROW LEVEL SECURITY;

-- 3. Políticas RLS - Usuários só podem ver/editar seus próprios dados
-- Política para SELECT - usuário só vê seus próprios dados
CREATE POLICY "Users can view own profile" ON users
  FOR SELECT USING (auth.uid() = id);

-- Política para INSERT - qualquer usuário autenticado pode inserir seus dados
CREATE POLICY "Users can insert own profile" ON users
  FOR INSERT WITH CHECK (auth.uid() = id);

-- Política para UPDATE - usuário só pode atualizar seus próprios dados
CREATE POLICY "Users can update own profile" ON users
  FOR UPDATE USING (auth.uid() = id);

-- Política para DELETE - usuário só pode deletar seus próprios dados
CREATE POLICY "Users can delete own profile" ON users
  FOR DELETE USING (auth.uid() = id);

-- 4. Criar função trigger para sincronizar com auth.users
CREATE OR REPLACE FUNCTION public.handle_new_user()
RETURNS TRIGGER AS $$
BEGIN
  INSERT INTO public.users (id, fullname, email)
  VALUES (new.id, new.raw_user_meta_data->>'fullname', new.email);
  RETURN new;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- 5. Criar trigger que executa quando novo usuário é criado
CREATE TRIGGER on_auth_user_created
  AFTER INSERT ON auth.users
  FOR EACH ROW EXECUTE PROCEDURE public.handle_new_user();

-- 6. Índices para performance
CREATE INDEX idx_users_email ON users(email);
CREATE INDEX idx_users_created_at ON users(created_at);

-- 7. Comentários para documentação
COMMENT ON TABLE users IS 'Tabela de usuários do marketplace';
COMMENT ON COLUMN users.id IS 'ID único do usuário, sincronizado com auth.users';
COMMENT ON COLUMN users.fullname IS 'Nome completo do usuário';
COMMENT ON COLUMN users.email IS 'Email único do usuário';
COMMENT ON COLUMN users.phone IS 'Número de telefone (opcional)';
COMMENT ON COLUMN users.created_at IS 'Data de criação do registro';